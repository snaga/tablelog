CREATE EXTENSION tablelog;
DROP TABLE IF EXISTS t1;
NOTICE:  table "t1" does not exist, skipping
DROP TABLE IF EXISTS t1_u;
NOTICE:  table "t1_u" does not exist, skipping
DROP TABLE IF EXISTS t1_u2;
NOTICE:  table "t1_u2" does not exist, skipping
DROP TABLE IF EXISTS t1_p;
NOTICE:  table "t1_p" does not exist, skipping
DROP TABLE IF EXISTS t1_p2;
NOTICE:  table "t1_p2" does not exist, skipping
CREATE TABLE t1 (
  uid integer,
  uname text
);
CREATE TABLE t1_u (
  uid integer unique,
  uname text
);
CREATE TABLE t1_u2 (
  uid integer unique,
  uname text unique
);
CREATE TABLE t1_u3 (
  uid integer,
  uname text unique
);
CREATE TABLE t1_u4 (
  uid integer,
  uname text,
  unique(uid, uname)
);
CREATE TABLE t1_p (
  uid integer primary key,
  uname text
);
CREATE TABLE t1_p2 (
  uid integer,
  uname text,
  primary key(uid,uname)
);
SELECT get_primary_keys('public', 't1');     -- NULL
 get_primary_keys 
------------------
 
(1 row)

SELECT get_primary_keys('public', 't1_u');   -- NULL
 get_primary_keys 
------------------
 
(1 row)

SELECT get_primary_keys('public', 't1_u2');  -- NULL
 get_primary_keys 
------------------
 
(1 row)

SELECT get_primary_keys('public', 't1_p');   -- {uid}
 get_primary_keys 
------------------
 {uid}
(1 row)

SELECT get_primary_keys('public', 't1_p2');  -- {uid,uname}
 get_primary_keys 
------------------
 {uid,uname}
(1 row)

SELECT get_unique_keys('public', 't1');     -- NULL
 get_unique_keys 
-----------------
 
(1 row)

SELECT get_unique_keys('public', 't1_u');   -- {uid}
 get_unique_keys 
-----------------
 {uid}
(1 row)

SELECT get_unique_keys('public', 't1_u2');  -- {uid}
 get_unique_keys 
-----------------
 {uid}
(1 row)

SELECT get_unique_keys('public', 't1_u3');  -- {uname}
 get_unique_keys 
-----------------
 {uname}
(1 row)

SELECT get_unique_keys('public', 't1_u4');  -- {uid,uname}
 get_unique_keys 
-----------------
 {uid,uname}
(1 row)

SELECT get_unique_keys('public', 't1_p');   -- NULL
 get_unique_keys 
-----------------
 
(1 row)

SELECT get_unique_keys('public', 't1_p2');  -- NULL
 get_unique_keys 
-----------------
 
(1 row)

SELECT get_column_names('public', 't1_u4');  -- {uid,uname}
 get_column_names 
------------------
 {uid,uname}
(1 row)

SELECT get_logging_keys('public', 't1');     -- NULL
 get_logging_keys 
------------------
 
(1 row)

SELECT get_logging_keys('public', 't1_u');   -- {uid}
 get_logging_keys 
------------------
 {uid}
(1 row)

SELECT get_logging_keys('public', 't1_u2');  -- {uid}
 get_logging_keys 
------------------
 {uid}
(1 row)

SELECT get_logging_keys('public', 't1_u3');  -- {uname}
 get_logging_keys 
------------------
 {uname}
(1 row)

SELECT get_logging_keys('public', 't1_u4');  -- {uid,uname}
 get_logging_keys 
------------------
 {uid,uname}
(1 row)

SELECT get_logging_keys('public', 't1_p');   -- {uid}
 get_logging_keys 
------------------
 {uid}
(1 row)

SELECT get_logging_keys('public', 't1_p2');  -- {uid,uname}
 get_logging_keys 
------------------
 {uid,uname}
(1 row)

CREATE TRIGGER public_t1_u_logging_trigger
  AFTER INSERT OR UPDATE OR DELETE ON public.t1_u
  FOR EACH ROW EXECUTE PROCEDURE tablelog_logging_trigger('uid');
CREATE TRIGGER public_t1_u4_logging_trigger
  AFTER INSERT OR UPDATE OR DELETE ON public.t1_u4
  FOR EACH ROW EXECUTE PROCEDURE tablelog_logging_trigger('uid,uname');
BEGIN;
INSERT INTO t1_u VALUES (1, 'user1');
UPDATE t1_u SET uname = 'user01';
DELETE FROM t1_u;
COMMIT;
BEGIN;
INSERT INTO t1_u4 VALUES (1, 'user1');
UPDATE t1_u4 SET uname = 'user01';
DELETE FROM t1_u4;
COMMIT;
SELECT
  schemaname,
  tablename,
  event,
  col_names,
  old_vals,
  new_vals,
  key_names,
  key_vals
FROM
  __table_logs__
ORDER BY
  txid, ts;
 schemaname | tablename | event  |  col_names  |  old_vals  | new_vals  |  key_names  |  key_vals  
------------+-----------+--------+-------------+------------+-----------+-------------+------------
 public     | t1_u      | INSERT | {uname,uid} |            | {user1,1} | {uid}       | 
 public     | t1_u      | UPDATE | {uname}     | {user1}    | {user01}  | {uid}       | {1}
 public     | t1_u      | DELETE | {uname,uid} | {user01,1} |           | {uid}       | {1}
 public     | t1_u4     | INSERT | {uname,uid} |            | {user1,1} | {uid,uname} | 
 public     | t1_u4     | UPDATE | {uname}     | {user1}    | {user01}  | {uid,uname} | {1,user1}
 public     | t1_u4     | DELETE | {uname,uid} | {user01,1} |           | {uid,uname} | {1,user01}
(6 rows)

